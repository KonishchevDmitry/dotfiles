#!/usr/bin/env bash
#
# Login into tmux session preserving SSH agent on reconnects
#

die() {
    echo "Error:" "$@" >&2
    exit 1
}

show_help() {
    cat <<EOF
Usage: $script_name [options]

optional arguments:
  -c, --directory PATH  tmux session start directory
  -s, --session NAME    tmux session name (default: ssh)
  -a, --agent PATH      SSH agent socket path (default: ~/.ssh/agent.socket)
  -h, --help            show this help message and exit
EOF
}

parse_args() {
    eval set -- "$@"

    while [ $# -gt 0 ]; do
        case "$1" in
            -c|--directory)
                shift
                start_directory="$1"
                [ "$start_directory" = /* ] || start_directory="$PWD/$start_directory"
                ;;
            -s|--session)
                shift
                session_name="$1"
                ;;
            -a|--agent)
                shift
                agent_socket_path="$1"
                ;;
            -h|--help)
                show_help
                exit 0
                ;;
            --)
                shift
                break
                ;;
            (*)
                die "Unrecognized option: $1."
                ;;
        esac
        shift
    done

    if [ $# -ne 0 ]; then
        die "Got $# arguments when zero is expected."
    fi
}

set -eu

script_name="$0"
session_name=ssh
start_directory=
agent_socket_path=~/.ssh/agent.socket

args="$(getopt -n "$0" -o c:s:a:h -l directory:,session:,agent:,help -- "$@")"
parse_args "${args[@]}"

if [[ -n "${SSH_AUTH_SOCK:-}" && ( ! -L "$agent_socket_path" || ! -e "$agent_socket_path" ) ]]; then
    rm -f "$agent_socket_path" && ln -s "$SSH_AUTH_SOCK" "$agent_socket_path"
fi

tmux_args=(-A -s "$session_name")
[ -z "$start_directory" ] || tmux_args+=("-c" "$start_directory")

SSH_AUTH_SOCK="$agent_socket_path" exec tmux new-session "${tmux_args[@]}"