#!/bin/bash -e
#
# Since OS X doesn't have a decent packaging system with a lot of packages,
# many of them are installed using Mac Ports, pip and npm. In this case it's
# much easier to handle all of this mess by script like this which allows to
# clear all accumulated garbage and reinstall all required foreign packages.
#


git_package() {
    echo -n "git+ssh://git@konishchev.ru/~git/$1.git"
}

github_package() {
    echo -n "https://github.com/KonishchevDmitry/$1/archive/master.zip"
}

pyver_to_port_pyver() {
    tr -d . <<< "$1"
}

check_system_directory() {
    local system_dir="$1"
    local white_list="$2"

    [ -d "$system_dir" ] || return 0

    local contents="$(ls -1 "$system_dir")"
    [ -z "$white_list" ] || contents="$(echo "$contents" | egrep -v "$white_list")" ||:

    if [ -n "$contents" ]; then
        echo "Warning: System directory $system_dir contains the following files:" >&2
        echo "$contents" >&2
    fi
}

uninstall_packages() {
    # PyCharm's IdeaVim plugin changes default keyboard settings. To revert
    # them:
    # defaults delete -gÂ ApplePressAndHoldEnabled

    local version
    local alternative

    echo "Stopping the services..."

    [ ! -f /Library/LaunchAgents/org.freedesktop.dbus-session.plist ] || \
        launchctl unload /Library/LaunchAgents/org.freedesktop.dbus-session.plist

    echo "Dropping all selected alternatives..."

    shopt -s nullglob
    for alternative in $prefix/etc/select/*/current; do
        sudo port select --set "$(basename $(dirname "$alternative"))" none ||:
    done
    shopt -u nullglob

    echo "Uninstalling all pip packages..."

    for version in $pyversions; do
        if which pip-$version > /dev/null; then
            pip-$version list | cut -f 1 -d ' ' | xargs sudo pip-$version uninstall -y
        fi
    done

    echo "Uninstalling all npm packages..."

    if which npm > /dev/null; then
        npm ls -gp | awk -F/ '/node_modules/ && !/node_modules.*node_modules/ {print $NF}' | egrep -v '^npm$' | sudo xargs npm -g rm
    fi

    echo "Uninstalling all MacPorts packages..."

    if [ -n "$(port list installed)" ]; then
        sudo port uninstall installed
    fi

    check_system_directory $prefix/Library/Frameworks/Python.framework
    check_system_directory $prefix/bin '^(daemondo|port|portf|portindex|portmirror)$'

    echo "Uninstallation finished successfully."
}

install_packages() {
    local version

    echo "Installing all required packages..."; set -x

    sudo port selfupdate

    # Mac Port's bash in contrast to system's bash supports completion
    #
    # Don't forget to set '$prefix/bin/bash -l' as a shell in the terminal
    # emulator
    sudo port install bash bash-completion

    sudo port install ack htop mutt pstree tmux tree watch

    # We already have git in the system, but this package brings to us git
    # completion and gitk tool
    sudo port install git

    # OS notifications from scripts
    sudo port install terminal-notifier

    # Meld requires a LOT of packages including GTK and DBus
    #
    # Alternative to meld: opendiff (command line tool which runs XCode's
    # FileMerge)
    if [ "$install_meld" -eq 1 ]; then
        sudo port install rarian # Missing requirement for meld
        sudo port install meld
        launchctl load -w /Library/LaunchAgents/org.freedesktop.dbus-session.plist
        sudo port install gnome-themes-standard
        echo "include \"$prefix/share/themes/Adwaita/gtk-2.0/gtkrc\"" > ~/.gtkrc-2.0
    fi

    for version in $port_pyversions; do
        sudo port install python$version
        sudo port install py$version-pip
    done

    sudo port select --set python python$port_default_pyver
    sudo port select --set pip pip$port_default_pyver

    sudo port install py$port_default_pyver-virtualenvwrapper
    sudo port select --set virtualenv virtualenv$port_default_pyver

    sudo pip-$default_pyver install jedi
    sudo port install vim +python$port_default_pyver
    sudo port install MacVim +python$port_default_pyver

    sudo port install py$port_default_pyver-pyflakes
    sudo port select --set pyflakes py$port_default_pyver-pyflakes

    sudo pip-$py3ver install pyvsb
    sudo pip-$py3ver install $(github_package pydeposits)
    #sudo pip-$py3ver install $(git_package credit-calculator)

    if [ "$role" = "laptop.job" ]; then
        sudo port install encfs mongodb
    elif [ "$role" = "laptop.home" ]; then
        sudo port install npm
        sudo npm install --global less
    fi

    set +x; echo "Installation finished successfully."
}

question_user() {
    local answer
    echo -n "Are you sure want to $1? (y/n) "
    read answer
    [ "$answer" = "y" ]
}

die() {
    echo "$@" >&2
    exit 1
}

show_usage() {
    die "Usage: $0 {install|uninstall}"
}


if [ $# -ne 1 ]; then
    show_usage
fi

if [ "$(whoami)" = root ]; then
    die "The script must be run from user."
fi

prefix=/opt/local
role="$(< ~/.role)"

# MacPorts default Python version
default_pyver=2.7
port_default_pyver="$(pyver_to_port_pyver "$default_pyver")"

# Python 3 version
py3ver=3.4

pyversions="$default_pyver $py3ver"
port_pyversions="$(pyver_to_port_pyver "$pyversions")"

install_meld=0

case $role in
    "laptop.job")
        ;;
    "laptop.home")
        ;;
    *)
        die 'Invalid ~/.role value.'
        ;;
esac

case $1 in
    "install") question_user "install all required packages" && install_packages ;;
    "uninstall") question_user "uninstall all required packages" && uninstall_packages ;;
    *) show_usage ;;
esac
